services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    environment:
      - AWS_REGION=ca-central-1
      # - AWS_ACCESS_KEY_ID=
      # - AWS_SECRET_ACCESS_KEY=
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      # - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      # - 55679:55679 # zpages extension
    volumes:
      # - ./volumes/otel-collector:/etc/otel
      - ./volumes/otel-collector-contrib:/etc/otel
      # - ./otel-collector-config.yaml:/etc/otelcol/config.yaml
      - ./otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
      # - ./certs:/etc/otel/certs

  aspire-dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    container_name: aspire-dashboard
    ports:
      - "18888:18888" # ui endpoint
      - "18889:18889" # gRPC endpoint
      - "18890:18890" # http endpoint
    environment:
      # - ASPNETCORE_URLS=http://+:18888 # default port 18888
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS=true # allow anonymous access
    volumes:
      - ./volumes/aspire-dashboard/data:/app/data
      # - ./certs:/app/certs

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./volumes/prometheus:/etc/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      # - '--web.console.libraries=/etc/prometheus/console_libraries' #
      # - '--web.console.templates=/etc/prometheus/consoles' #
      # - '--enable-feature=otlp-write-receiver'

  # AWS Distro for OpenTelemetry Collector
  # aws-ot-collector:
  #   image: public.ecr.aws/aws-observability/aws-otel-collector:latest
  #   container_name: aws-ot-collector
  #   command: ["--config=/etc/otel-agent-config.yaml", "--health-cmd=/healthcheck", "--health-interval=15s"]
  #   environment:
  #     - AWS_REGION=ca-central-1
  #     - AWS_ACCESS_KEY_ID=AKIAYEVSZSSC4YJK5HVX
  #     - AWS_SECRET_ACCESS_KEY=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
  #   volumes:
  #     - ./adot-config.yml:/etc/otel-agent-config.yaml
  #     - ./volumes/adot:/home/aoc/.aws
  #   ports:
  #     # - "1777:1777"   # pprof extension
  #     # - "55679:55679" # zpages extension
  #     - "13134:13133"       # health_check
  #     - "4417:4317" # OTLP grpc receiver
  #     # - "4318:4318" # OTLP http receiver
  #     # - "8888:8888"

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    # environment:
    #   - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - 16686:16686
      # - 4317:4317
      # - 4318:4318
      # - 9411:9411

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./volumes/grafana:/var/lib/grafana
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # - GF_LOG_LEVEL=debug
      # - GF_INSTALL_PLUGINS=grafana-clock-panel, grafana-simple-json-datasource
